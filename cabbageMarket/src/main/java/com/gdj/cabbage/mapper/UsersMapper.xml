<?xml version="1.0" encoding="UTF-8"?>
<!-- 작성자 이재범 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdj.cabbage.mapper.UsersMapper">
	<!-- 로그인 쿼리 -->
	<select id="loginSession" resultType="java.util.Map" parameterType="com.gdj.cabbage.vo.Users">
		SELECT
			user_id userId,
			email,
			nickname,
			utp.point point
		FROM
			users u LEFT JOIN users_total_point utp ON u.user_id=utp.userId 
		<where>
			email=#{email} AND password=PASSWORD(#{password}) AND user_state=1 AND email != '탈퇴'
		</where>			
	</select>
	
	<!-- 회원가입 쿼리 -->
	<insert id="registerUser" parameterType="com.gdj.cabbage.vo.Users">
		<selectKey keyProperty="userId" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT 
			users(
				username, 
				email, 
				password, 
				nickname, 
				mobile, 
				modify_date, 
				user_state, 
				create_date
				) 
		VALUES(
			#{username}, 
			#{email},
			PASSWORD(#{password}),
			#{nickname},
			#{mobile, jdbcType=VARCHAR},
			NOW(),
			1,
			NOW()
			) 
	</insert>
	
	<!-- email 중복 여부  -->
	<select id="selectEmail" resultType="Integer" parameterType="com.gdj.cabbage.vo.Users">
		SELECT
			COUNT(*)
		FROM
			users
		<where>
			email=#{email}
		</where>
	</select>
	
	<!-- nickname 중복여부 -->
	<select id="selectNickname" resultType="Integer" parameterType="com.gdj.cabbage.vo.Users">
		SELECT
			COUNT(*)
		FROM
			users
		<where>
			nickname=#{nickname}
		</where>
	</select>
		
	<!-- 네이버 아이디 존재 여부 -->
	<select id="selectSnsId" resultType="Integer" parameterType="com.gdj.cabbage.vo.SNSInfo">
		SELECT
			COUNT(*)
		FROM
			sns_info
		<where>
			sns_id=#{id}
		</where>
	</select>
	
	<!--  네이버 정보 sns테이블에 등록 -->
	<insert id="registerNaverUser" parameterType="com.gdj.cabbage.vo.Users">
		INSERT INTO
			sns_info(
				user_id, 
				sns_id, 
				sns_type, 
				sns_name, 
				sns_profile, 
				sns_connect_Date
				) 
		VALUES(
			#{userId}, 
			#{snsId},
			#{snsType},
			#{snsName},
			#{snsProfile},
			NOW()
			) 
	</insert> 
	
	<!-- 네이버 유저 session -->
	<select id="naverLoginSession" resultType="java.util.Map" parameterType="String">
		SELECT
			u.user_id userId,
			u.email,
			u.nickname,
			utp.point point
		FROM
			users u LEFT JOIN sns_info s ON u.user_id=s.user_id JOIN users_total_point utp ON u.user_id=utp.userId
		<where>
			s.sns_id=#{snsId}
		</where>			
	</select>
	
	<!-- 유저 정보 출력 -->
	<select id="selectUserInfo" resultType="java.util.Map" parameterType="Integer">
		SELECT 
			u.username username, 
			u.email email, 
			u.nickname nickname, 
			u.mobile mobile, 
			u.create_date createDate, 
			IFNULL(s.sns_type,'') snsType
		FROM 
			users u LEFT JOIN sns_info s ON u.user_id=s.user_id 
		<where>
			u.user_id=#{userId}
		</where>
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="updateUsers" parameterType="com.gdj.cabbage.vo.Users">
		UPDATE
			users
		SET
			username=#{username},
			password=PASSWORD(#{password}),
			modify_date=NOW(),
			mobile=#{mobile}
		<where>
			user_id=#{userId}
		</where>
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="deleteUser" parameterType="com.gdj.cabbage.vo.Users">
		UPDATE
			users
		SET
			username='탈퇴',
			email = '탈퇴',
			password = '탈퇴',
			nickname = '탈퇴',
			mobile = '탈퇴',
			modify_date = NOW(),
			mobile = '탈퇴',
			user_state = 0
		<where>
			user_id=#{userId} AND password=PASSWORD(#{password})
		</where>
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="deleteSnsUser" parameterType="com.gdj.cabbage.vo.Users">
		UPDATE
			users
		SET
			username='탈퇴',
			email = '탈퇴',
			password = '탈퇴',
			nickname = '탈퇴',
			mobile = '탈퇴',
			modify_date = NOW(),
			mobile = '탈퇴',
			user_state = 0
		<where>
			user_id=#{userId}
		</where>
	</update>
	
	<!-- 네이버 sns 회원 정보 탈퇴 -->
	<delete id="deleteSnsInfo" parameterType="com.gdj.cabbage.vo.Users">
		DELETE
		FROM
			sns_info
		<where>
			user_id=#{userId}
		</where>
	</delete>
	
	<!-- sns아이디 조회 -->
	<select id="selectSnsUserId" resultType="Integer" parameterType="com.gdj.cabbage.vo.Users">
		SELECT
			COUNT(*)
		FROM
			sns_info
		<where>
			user_id=#{userId}
		</where>
	</select>
	
	<!-- 유저 포인트 사용 내역 조회 -->
	<select id="userPointHistoryList" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT 
			a.content content, 
			a.point point, 
			a.usedDate usedDate 
		FROM		
			(SELECT 
				'충전' content, points point, used_point_date usedDate FROM points_recharge_history WHERE user_id=#{userId} 
			UNION ALL
			SELECT 
				'입찰' content, bpuh.point point, bpuh.create_date usedDate FROM bidding_points_using_history bpuh LEFT JOIN bidding_auction_product bap ON bpuh.bidding_auction_product_id=bap.bidding_auction_product_id WHERE bap.user_id=#{userId} AND bpuh.income_expenditure='입찰'
			UNION ALL
			SELECT 
				'유찰' content, bpuh.point point, bpuh.create_date usedDate FROM bidding_points_using_history bpuh LEFT JOIN bidding_auction_product bap ON bpuh.bidding_auction_product_id=bap.bidding_auction_product_id WHERE bap.user_id=#{userId} AND bpuh.income_expenditure='유찰'
			UNION ALL
			SELECT 
				'낙찰' content, bpuh.point point, bpuh.create_date usedDate FROM bidding_points_using_history bpuh LEFT JOIN bidding_auction_product bap ON bpuh.bidding_auction_product_id=bap.bidding_auction_product_id WHERE bap.user_id=#{userId} AND bpuh.income_expenditure='낙찰'
			UNION ALL
			SELECT 
				'판매' content, bpuh.point point, bpuh.create_date usedDate FROM buying_points_using_history bpuh LEFT JOIN apply_product_sales_delivery apsd ON bpuh.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id WHERE apsd.user_id=#{userId} AND bpuh.income_expenditure='수입'
			UNION ALL
			SELECT 
				'구매' content, bpuh.point point, bpuh.create_date usedDate FROM buying_points_using_history bpuh LEFT JOIN buying_used_product bup ON bpuh.apply_product_sales_delivery_id=bup.apply_product_sales_delivery_id WHERE bup.user_id=#{userId} AND bpuh.income_expenditure='지출') a
		<where>
			<if test="content == null">
				content='충전' OR content='유찰' OR content='판매' OR content='입찰' OR content='낙찰' OR content='구매'
			</if>
			
			<if test="content == 1">
				content='충전' OR content='유찰' OR content='판매' OR content='낙찰' 
			</if>
			
			<if test="content == 2">
				content='입찰' OR content='구매'
			</if>
		</where>
		ORDER BY 
			usedDate desc
		LIMIT
			#{beginRow},#{rowPerPage}
	</select>
	
	<!-- 유저 포인트 사용 내역 조회 -->
	<select id="userPointHistoryCount" resultType="Integer" parameterType="java.util.Map">
		SELECT 
			COUNT(*)
		FROM		
			(SELECT 
				'충전' content, points point, used_point_date usedDate FROM points_recharge_history WHERE user_id=#{userId} 
			UNION ALL
			SELECT 
				'입찰' content, bpuh.point point, bpuh.create_date usedDate FROM bidding_points_using_history bpuh LEFT JOIN bidding_auction_product bap ON bpuh.bidding_auction_product_id=bap.bidding_auction_product_id WHERE bap.user_id=#{userId} AND bpuh.income_expenditure='입찰'
			UNION ALL
			SELECT 
				'유찰' content, bpuh.point point, bpuh.create_date usedDate FROM bidding_points_using_history bpuh LEFT JOIN bidding_auction_product bap ON bpuh.bidding_auction_product_id=bap.bidding_auction_product_id WHERE bap.user_id=#{userId} AND bpuh.income_expenditure='유찰'
			UNION ALL
			SELECT 
				'낙찰' content, bpuh.point point, bpuh.create_date usedDate FROM bidding_points_using_history bpuh LEFT JOIN bidding_auction_product bap ON bpuh.bidding_auction_product_id=bap.bidding_auction_product_id WHERE bap.user_id=#{userId} AND bpuh.income_expenditure='낙찰'
			UNION ALL
			SELECT 
				'판매' content, bpuh.point point, bpuh.create_date usedDate FROM buying_points_using_history bpuh LEFT JOIN apply_product_sales_delivery apsd ON bpuh.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id WHERE apsd.user_id=#{userId} AND bpuh.income_expenditure='수입'
			UNION ALL
			SELECT 
				'구매' content, bpuh.point point, bpuh.create_date usedDate FROM buying_points_using_history bpuh LEFT JOIN buying_used_product bup ON bpuh.apply_product_sales_delivery_id=bup.apply_product_sales_delivery_id WHERE bup.user_id=#{userId} AND bpuh.income_expenditure='지출') a
		<where>
			<if test="content == null">
				content='충전' OR content='유찰' OR content='판매' OR content='입찰' OR content='낙찰' OR content='구매'
			</if>
			
			<if test="content == 1">
				content='충전' OR content='유찰' OR content='판매' OR content='낙찰' 
			</if>
			
			<if test="content == 2">
				content='입찰' OR content='구매'
			</if>
		</where>
	</select>
	
	<!-- 포인트 충전 -->
	<insert id="pointRecharge" parameterType="com.gdj.cabbage.vo.PointsRechargeHistory">
		INSERT INTO
			points_recharge_history(
				user_id, 
				points, 
				used_point_date
				) 
		VALUES(
			#{userId}, 
			#{points},
			NOW()
			)
	</insert>
	
	<!-- 세션 갱신 쿼리 -->
	<select id="sessionUpdate" parameterType="Integer" resultType="java.util.Map">
		SELECT
			user_id userId,
			email,
			nickname,
			utp.point point
		FROM
			users u LEFT JOIN users_total_point utp ON u.user_id=utp.userId 
		<where>
			u.user_id=#{userId}
		</where>			
	</select>
	
	<!-- 배송지 추가 쿼리 -->
	<insert id="addAddress" parameterType="com.gdj.cabbage.vo.ShippingAddress">
		INSERT INTO
			shipping_address(
				user_id,
				recipient_name,
				address,
				recipient_phone_number
			)
		VALUES(
			#{userId},
			#{recipientName},
			#{address},
			#{recipientPhoneNumber}
		)
			
	</insert>
	
	<!-- 배송지 출력 쿼리 -->
	<select id="getAddressByUserId" parameterType="Integer" resultType="com.gdj.cabbage.vo.ShippingAddress">
		SELECT
			shipping_address_id shippingAddressId,
			user_id userId,
			recipient_name recipientName,
			address,
			recipient_phone_number recipientPhoneNumber
		FROM
			shipping_address
		<where>
			user_id=#{userId}
		</where>
	</select>
	
	<!-- 배송지 삭제 쿼리 -->
	<delete id="deleteAddress" parameterType="com.gdj.cabbage.vo.ShippingAddress">
		DELETE
		FROM
			shipping_address
		<where>
			shipping_address_id=#{shippingAddressId} AND user_id=#{userId}
		</where>
	</delete>
	
	<!-- 배송지 개수 쿼리 -->
	<select id="getAddressCount" parameterType="Integer" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			shipping_address
		<where>
			user_id=#{userId}
		</where>
	</select>
	
	<!-- 유저 중고등록리스트 쿼리 -->
	<select id="getUsedProductListByUserId" parameterType="Integer" resultType="java.util.Map">
		SELECT 
			apsd.apply_product_sales_delivery_id applyProductSalesDeliveryId,
			apsdi.img_name img,
			cs.category_sub_name category,
			apsd.product_name productName,
			upr.product_price price,
			upr.registration_deadline deadline,
			IF(DATEDIFF(upr.registration_deadline, NOW())>=0, '등록', '마감') state
		FROM 
			used_product_registration upr 
			LEFT JOIN apply_product_sales_delivery apsd ON upr.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id 
			JOIN category_sub cs ON apsd.category_sub_id=cs.category_sub_id
			JOIN apply_product_sales_delivery_img apsdi ON apsd.apply_product_sales_delivery_id=apsdi.apply_product_sales_delivery_id
			JOIN product_confirmation_registration pcr ON apsd.apply_product_sales_delivery_id=pcr.apply_product_sales_delivery_id
		<where>
			apsd.user_id=#{userId} AND pcr.registration_state=1
		</where>
		GROUP BY
			apsd.apply_product_sales_delivery_id
	</select>
	
	<!-- 유저 경매등록리스트 쿼리 -->
	<select id="getAuctionProductListByUserId" parameterType="Integer" resultType="java.util.Map">
		SELECT 
			apsd.apply_product_sales_delivery_id applyProductSalesDeliveryId,
			apsdi.img_name img,
			cs.category_sub_name category,
			apsd.product_name productName,
			IFNULL(MAX(bap.bid_price),'') maxPrice,
			apr.registration_deadline deadline,
			IF(DATEDIFF(apr.registration_deadline, NOW())>=0, '등록', '마감') state
		FROM 
			auction_product_registration apr 
			LEFT JOIN bidding_auction_product bap ON apr.apply_product_sales_delivery_id=bap.apply_product_sales_delivery_id
			JOIN apply_product_sales_delivery apsd ON apr.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id
			JOIN apply_product_sales_delivery_img apsdi ON apsd.apply_product_sales_delivery_id=apsdi.apply_product_sales_delivery_id
			JOIN category_sub cs ON apsd.category_sub_id=cs.category_sub_id
			JOIN product_confirmation_registration pcr ON apsd.apply_product_sales_delivery_id=pcr.apply_product_sales_delivery_id
		<where>
			apsd.user_id=#{userId} AND pcr.registration_state=2
		</where>
		GROUP BY 
			apsd.apply_product_sales_delivery_id
	</select>
	
	<!-- 유저 직거래등록리스트 쿼리 -->
	<select id="getDirectProductListByUserId" parameterType="Integer" resultType="java.util.Map">
		SELECT
			dtpr.direct_trade_product_registration_id registerId,
			dtpi.img_name img,
			cs.category_sub_name category,
			dtpr.product_name productName,
			dtpr.product_price price,
			dtpr.location location,
			dtpr.product_state productState,
			dtpr.create_date createDate
		FROM
		direct_trade_product_registration dtpr LEFT JOIN direct_trade_product_img dtpi ON dtpr.direct_trade_product_registration_id=dtpi.direct_trade_product_registration_id
		JOIN category_sub cs ON dtpr.category_sub_id=cs.category_sub_id
		<where>
			dtpr.user_id=#{userId} AND (dtpr.product_state > 0 AND dtpr.product_state &lt; 3) 
		</where>
		GROUP BY
			dtpr.direct_trade_product_registration_id
	</select>
	
	<!-- 중고 상품 등록 삭제 -->
	<delete id="deleteUsedProduct" parameterType="Integer">
		DELETE
		FROM
			used_product_registration
		<where>
			apply_product_sales_delivery_id=#{applyProductSalesDeliveryId}
		</where>
	</delete>
	
	<!-- 매니저 등록 상품 상태값 변환 -->
	<update id="updateRegistrationState" parameterType="Integer">
		UPDATE
			product_confirmation_registration
		SET
			registration_state=9
		<where>
			apply_product_sales_delivery_id=#{applyProductSalesDeliveryId}
		</where>
	</update>
	
	<!-- 입찰 기록 조회 -->
	<select id="biddingCount" parameterType="Integer" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			bidding_auction_product
		<where>
			apply_product_sales_delivery_id=#{applyProductSalesDeliveryId}
		</where>
	</select>
	
	<!-- 경매 상품 등록 삭제 -->
	<delete id="deleteAuctionProduct" parameterType="Integer">
		DELETE
		FROM
			auction_product_registration
		<where>
			apply_product_sales_delivery_id=#{applyProductSalesDeliveryId}
		</where>
	</delete>
	
	<!-- 직거래 상품 등록 삭제 -->
	<update id="deleteDirectProduct" parameterType="Integer">
		UPDATE
			direct_trade_product_registration
		SET
			product_state=0
		<where>
			direct_trade_product_registration_id=#{registerId}
		</where>
	</update>
	
	<!-- 유저 중고 구매 리스트 쿼리 -->
	<select id="getBuyingUsedProductByUserId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			bpd.apply_product_sales_delivery_id applyId,
			apsdi.img_name img,
			cs.category_sub_name category,
			apsd.product_name productName,
			upr.product_price price,
			bpd.create_date buyingDate
		FROM
			buying_product_delivery bpd LEFT JOIN apply_product_sales_delivery apsd ON bpd.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id
			JOIN apply_product_sales_delivery_img apsdi ON bpd.apply_product_sales_delivery_id=apsdi.apply_product_sales_delivery_id
			JOIN category_sub cs ON apsd.category_sub_id=cs.category_sub_id
			JOIN used_product_registration upr ON apsd.apply_product_sales_delivery_id=upr.apply_product_sales_delivery_id
			JOIN shipping_address sa ON bpd.shipping_address_id=sa.shipping_address_id
		<where>
			sa.user_id=#{userId}
		</where>
		GROUP BY
			bpd.apply_product_sales_delivery_id
		LIMIT
			#{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 유저 중고 구매 행 수 -->
	<select id="getBuyingUsedProductCount" parameterType="Integer" resultType="Integer">
		SELECT 
			COUNT(*)
		FROM		
			(SELECT
				bpd.apply_product_sales_delivery_id applyId
			FROM
				buying_product_delivery bpd LEFT JOIN apply_product_sales_delivery apsd ON bpd.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id
				JOIN apply_product_sales_delivery_img apsdi ON bpd.apply_product_sales_delivery_id=apsdi.apply_product_sales_delivery_id
				JOIN category_sub cs ON apsd.category_sub_id=cs.category_sub_id
				JOIN used_product_registration upr ON apsd.apply_product_sales_delivery_id=upr.apply_product_sales_delivery_id
				JOIN shipping_address sa ON bpd.shipping_address_id=sa.shipping_address_id		
			WHERE
				sa.user_id=#{userId}			
			GROUP BY
				bpd.apply_product_sales_delivery_id) a
	</select>
	
	<!--  유저 입찰 내역 쿼리 -->
	<select id="getBiddingListByUser" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			bap.apply_product_sales_delivery_id applyId, 
			bap.bidding_auction_product_id biddingAuctionProductId,
			apsdi.img_name img,
			cs.category_sub_name category,
			apsd.product_name productName,
			bap.bid_price point,
			bap.create_date biddingDate,
			IF(TIMEDIFF(apr.registration_deadline, NOW())>0, '경매중','경매종료') auctionState,
			IF(bap.user_id IN (SELECT userId FROM successful_bid WHERE applyId=bap.apply_product_sales_delivery_id), 1, 0) auctionResult
		FROM
			bidding_auction_product bap LEFT JOIN bidding_points_using_history bpuh ON bpuh.bidding_auction_product_id=bap.bidding_auction_product_id
			JOIN apply_product_sales_delivery apsd ON bap.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id
			JOIN apply_product_sales_delivery_img apsdi ON apsd.apply_product_sales_delivery_id=apsdi.apply_product_sales_delivery_id
			JOIN category_sub cs ON apsd.category_sub_id=cs.category_sub_id
			JOIN auction_product_registration apr ON apsd.apply_product_sales_delivery_id=apr.apply_product_sales_delivery_id
		<where>
			bap.user_id = #{userId}
		</where>		
		GROUP BY
			apsd.apply_product_sales_delivery_id
		ORDER BY
			bap.create_date desc
		LIMIT
			#{beginRow},#{rowPerPage}
	</select>
	
	<!--  유저 입찰 내역 수 쿼리 -->
	<select id="biddingListCount" parameterType="Integer" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			bidding_auction_product 
		<where>
			user_id = #{userId}
		</where>		
	</select>
	
	<!-- 유저 판매 내역 쿼리 -->
	<select id="sellListByUser" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
			a.content content, 
			a.img img, 
			a.productName productName, 
			a.price price, 
			a.commissions commissions, 
			a.createDate createDate
		FROM
			(SELECT 
				'직거래 판매' content, dtpi.img_name img, dtpr.product_name productName, dtpr.product_price price, 'X' commissions, dtpr.create_date createDate
			FROM direct_trade_product_registration dtpr 
			LEFT JOIN direct_trade_product_img dtpi ON dtpr.direct_trade_product_registration_id=dtpi.direct_trade_product_registration_id 
			WHERE dtpr.user_id=#{userId} AND dtpr.product_state=3
			GROUP BY dtpr.direct_trade_product_registration_id
			UNION ALL
			SELECT '중고 판매' content, apsdi.img_name img, apsd.product_name productName, bpuh.point price, bch.commission_point commissions, upr.create_date createDate
			FROM buying_used_product bup 
			LEFT JOIN apply_product_sales_delivery apsd ON bup.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id 
			JOIN apply_product_sales_delivery_img apsdi ON apsd.apply_product_sales_delivery_id=apsdi.apply_product_sales_delivery_id
			JOIN buying_points_using_history bpuh ON bpuh.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id
			JOIN buying_commissions_history bch ON bch.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id 
			JOIN used_product_registration upr ON upr.apply_product_sales_delivery_id=bup.apply_product_sales_delivery_id
			WHERE apsd.user_id=#{userId} AND bpuh.income_expenditure='수입'
			GROUP BY bup.apply_product_sales_delivery_id
			UNION ALL
			SELECT '경매 낙찰' content, apsdi.img_name img, apsd.product_name productName, bpuh.point price, bch.commission_point commissions, apr.create_date createDate
			FROM auction_product_registration apr
			LEFT JOIN apply_product_sales_delivery apsd ON apr.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id 
			JOIN apply_product_sales_delivery_img apsdi ON apsd.apply_product_sales_delivery_id=apsdi.apply_product_sales_delivery_id
			JOIN bidding_auction_product bap ON bap.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id
			JOIN bidding_points_using_history bpuh ON bpuh.bidding_auction_product_id=bap.bidding_auction_product_id
			JOIN bidding_commissions_history bch ON bch.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id 
			WHERE apsd.user_id=#{userId} AND bpuh.income_expenditure='낙찰'
			GROUP BY apr.apply_product_sales_delivery_id) a
		ORDER BY
			a.createDate DESC
		LIMIT
			#{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 유저 판매 내역 쿼리 -->
	<select id="sellListCount" parameterType="Integer" resultType="Integer">
		SELECT 
			COUNT(*)
		FROM
			(SELECT 
				'직거래 판매' content, dtpi.img_name img, dtpr.product_name productName, dtpr.product_price price, 'X' commissions, dtpr.create_date createDate
			FROM direct_trade_product_registration dtpr 
			LEFT JOIN direct_trade_product_img dtpi ON dtpr.direct_trade_product_registration_id=dtpi.direct_trade_product_registration_id 
			WHERE dtpr.user_id=#{userId} AND dtpr.product_state=3
			GROUP BY dtpr.direct_trade_product_registration_id
			UNION ALL
			SELECT '중고 판매' content, apsdi.img_name img, apsd.product_name productName, bpuh.point price, bch.commission_point commissions, upr.create_date createDate
			FROM buying_used_product bup 
			LEFT JOIN apply_product_sales_delivery apsd ON bup.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id 
			JOIN apply_product_sales_delivery_img apsdi ON apsd.apply_product_sales_delivery_id=apsdi.apply_product_sales_delivery_id
			JOIN buying_points_using_history bpuh ON bpuh.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id
			JOIN buying_commissions_history bch ON bch.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id 
			JOIN used_product_registration upr ON upr.apply_product_sales_delivery_id=bup.apply_product_sales_delivery_id
			WHERE apsd.user_id=#{userId} AND bpuh.income_expenditure='수입'
			GROUP BY bup.apply_product_sales_delivery_id
			UNION ALL
			SELECT '경매 낙찰' content, apsdi.img_name img, apsd.product_name productName, bpuh.point price, bch.commission_point commissions, apr.create_date createDate
			FROM auction_product_registration apr
			LEFT JOIN apply_product_sales_delivery apsd ON apr.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id 
			JOIN apply_product_sales_delivery_img apsdi ON apsd.apply_product_sales_delivery_id=apsdi.apply_product_sales_delivery_id
			JOIN bidding_auction_product bap ON bap.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id
			JOIN bidding_points_using_history bpuh ON bpuh.bidding_auction_product_id=bap.bidding_auction_product_id
			JOIN bidding_commissions_history bch ON bch.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id 
			WHERE apsd.user_id=#{userId} AND bpuh.income_expenditure='낙찰'
			GROUP BY apr.apply_product_sales_delivery_id) a
	</select>
	
	<!-- 구매 후 배송정보 쿼리 -->
	<select id="getBoughtProductOne" resultType="java.util.Map" parameterType="Integer">
		SELECT
			apsd.product_name productName,
			apsdi.img_name img,
			upr.product_price price,
			sa.address address,
			dpd.waybill_number waybillNumber,
			dpd.delivery_requests deliveryRequests
		FROM
			buying_product_delivery dpd 
			LEFT JOIN apply_product_sales_delivery apsd ON dpd.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id
			JOIN shipping_address sa ON dpd.shipping_address_id=sa.shipping_address_id
			JOIN apply_product_sales_delivery_img apsdi ON apsd.apply_product_sales_delivery_id=apsdi.apply_product_sales_delivery_id
			JOIN used_product_registration upr ON upr.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id				
		WHERE
			apsd.apply_product_sales_delivery_id=#{applyId}
						
		GROUP BY
			apsd.apply_product_sales_delivery_id
	</select>
	
	<!-- 낙찰 후 배송정보 쿼리 -->
	<select id="getBiddingProductOne" resultType="java.util.Map" parameterType="Integer">
		SELECT
			apsd.product_name productName,
			apsdi.img_name img,
			sb.price price,
			sa.address address,
			dpd.waybill_number waybillNumber,
			dpd.delivery_requests deliveryRequests
		FROM
			bidding_product_delivery dpd 
			LEFT JOIN apply_product_sales_delivery apsd ON dpd.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id
			JOIN shipping_address sa ON dpd.shipping_address_id=sa.shipping_address_id
			JOIN apply_product_sales_delivery_img apsdi ON apsd.apply_product_sales_delivery_id=apsdi.apply_product_sales_delivery_id
			JOIN auction_product_registration apr ON apr.apply_product_sales_delivery_id=apsd.apply_product_sales_delivery_id
			JOIN successful_bid sb ON sb.applyId=apsd.apply_product_sales_delivery_id
		<where>
			apsd.apply_product_sales_delivery_id=#{applyId}
		</where>
		GROUP BY
			apsd.apply_product_sales_delivery_id
	</select>
</mapper>