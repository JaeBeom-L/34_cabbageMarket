<?xml version="1.0" encoding="UTF-8"?>
<!-- 작성자 : 김태훈 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdj.cabbage.mapper.ChattingMapper">

	<select id="selectChattingRoomOne" parameterType="map" resultType="map">
		SELECT cr.chatting_room_id chattingRoomId,
			   cr.direct_trade_product_registration_id directTradeProductRegistrationId,
			   cr.user_id userId,
			   cr.chatting_room_state chattingRoomState,
			   LEFT(cr.create_date,16) createDate,
			   dtpr.user_id sellerId
		  FROM chatting_room cr, direct_trade_product_registration dtpr
		 WHERE cr.direct_trade_product_registration_id = dtpr.direct_trade_product_registration_id AND
		 	   cr.direct_trade_product_registration_id = #{directTradeProductRegistrationId} AND
			   (cr.user_id = #{userId})
	</select>
	
	<select id="selectSellerId" parameterType="int" resultType="Integer">
		SELECT DISTINCT dtpr.user_id sellerId
		  FROM chatting_room cr, direct_trade_product_registration dtpr
		 WHERE cr.direct_trade_product_registration_id = dtpr.direct_trade_product_registration_id AND
		 		 cr.direct_trade_product_registration_id = #{directTradeProductRegistrationId}
	</select>
	
	<insert id="insertChattingRoom" parameterType="map">
		<selectKey resultType="int" keyProperty="chattingRoomId" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO chatting_room(direct_trade_product_registration_id,user_id,create_date) 
		     VALUES(#{directTradeProductRegistrationId}, #{userId}, NOW())
	</insert>
	
	<select id="selectChattingContentListById" parameterType="int" resultType="map">
	    SELECT cc.chatting_room_id chattingRoomId,
			   cc.user_id userId,
			   cc.content,
			   LEFT(cc.create_date,16) createDate,
			   u.nickname
	      FROM chatting_content cc, users u
	     WHERE cc.user_id = u.user_id AND
			   chatting_room_id = #{chattingRoomId}
	  ORDER BY cc.create_date
	</select>
	
	<insert id="insertChattingContent" parameterType="com.gdj.cabbage.vo.ChattingContent">
		<selectKey resultType="int" keyProperty="chattingContentId" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO chatting_content(chatting_room_id,user_id,content,create_date)
		VALUES (#{chattingRoomId},#{userId},#{content},NOW())
	</insert>
	
	<select id="selectNickNameAndCreateDateBykey" parameterType="int" resultType="map">
		SELECT u.nickname, LEFT(cc.create_date,16) createDate
		  FROM chatting_content cc, users u
	     WHERE cc.user_id = u.user_id AND
			   cc.chatting_content_id = #{chattingContentId}
	</select>
	
	<select id="selectChattingRoomListById" parameterType="int" resultType="map">
		SELECT cc.content lastContent,
			   LEFT(cc.create_date,16) createDate,
			   cc.user_id lastChatterId,
			   cr.chatting_room_id chattingRoomId,
			   buyerUser.nickname buyer,
			   cr.user_id buyerId,
			   cr.direct_trade_product_registration_id directTradeProductRegistrationId,
			   sellerUser.nickname seller,
		       sellerUser.user_id sellerId
		  FROM chatting_content cc, chatting_room cr, users buyerUser, direct_trade_product_registration dtpr, users sellerUser
		 WHERE cc.chatting_room_id = cr.chatting_room_id AND
			   cr.user_id = buyerUser.user_id AND
		   	   cr.direct_trade_product_registration_id = dtpr.direct_trade_product_registration_id AND
			   dtpr.user_id = sellerUser.user_id AND
			   (cr.user_id = #{userId} OR dtpr.user_id = #{userId}) AND
			   cc.create_date IN(SELECT MAX(create_date)
								   FROM chatting_content
						       GROUP BY chatting_room_id)
	  ORDER BY createDate DESC						       	   
	</select>
</mapper>