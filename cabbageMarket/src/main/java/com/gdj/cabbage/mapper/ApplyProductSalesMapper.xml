<?xml version="1.0" encoding="UTF-8"?>
<!-- 작성자 : 김태훈 -->
<!-- 수정자 : 강혜란 210713 -->
<!-- 수정자 : 이재범 210714 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdj.cabbage.mapper.ApplyProductSalesMapper">

	<select id="selectApplyProductSalesDeliveryList" parameterType="int" resultType="map">
		SELECT 
			apsd.apply_product_sales_delivery_id applyProductSalesDeliveryId,
			IF(ISNULL(pcr.registration_state) , 'null심사중', '9등록가능') AS registrationState,
			img_name imgName,
			apsd.product_name productName,
			cs.category_sub_name categorySubName
		FROM 
			apply_product_sales_delivery apsd 
		  	LEFT JOIN category_sub cs ON cs.category_sub_id = apsd.category_sub_id
		  	LEFT JOIN apply_product_sales_delivery_img apsdi ON apsd.apply_product_sales_delivery_id = apsdi.apply_product_sales_delivery_id
			LEFT JOIN product_confirmation_registration pcr ON apsd.apply_product_sales_delivery_id = pcr.apply_product_sales_delivery_id
		WHERE 
			apsd.user_id = #{userId} AND ((pcr.registration_state = 9) OR (ISNULL(pcr.registration_state)))
		GROUP BY 
			apsdi.apply_product_sales_delivery_id
	</select>

	<select id="selectApplyImgByKey" parameterType="int" resultType="String"> <!-- applyId로 이미지 가져오는 매퍼 -->
		SELECT 
			img_name imgName
		FROM 
			apply_product_sales_delivery_img
		<where>
		 	apply_product_sales_delivery_id = #{applyId}
		 </where>
	</select>
	
	<insert id="insertApplyProductSalesDelivery" parameterType="com.gdj.cabbage.vo.ApplyProductSalesDelivery">
		<selectKey resultType="int" keyProperty="applyProductSalesDeliveryId" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO apply_product_sales_delivery (
					user_id,
					category_sub_id,
					product_name,
					return_address,
					waybill_number,
					delivery_requests,
					create_date)
		    VALUES (#{userId},
					#{categorySubId},
				    #{productName},
				    #{returnAddress},
				    #{waybillNumber},
				    #{deliveryRequests},
					NOW())
	</insert>
	
	<insert id="insertApplyproductSalesDeliveryImg" parameterType="com.gdj.cabbage.vo.ApplyproductSalesDeliveryImg">
		INSERT INTO apply_product_sales_delivery_img VALUES(#{applyProductSalesDeliveryId}, #{imgName}, #{imgType}, #{imgSize})
	</insert>
	
	
	<select id="selectApplyOne" parameterType="int" resultType="map"> <!-- applyId로 상세정보 가져오는 매퍼 -->
		SELECT 
			apsd.apply_product_sales_delivery_id applyId
			,apsd.user_id userId
			,main.category_main_name categoryMain
			,middle.category_middle_name categoryMiddle
			,category_sub_name categorySub
			,product_name productName
			,IF(ISNULL(pcr.registration_state) , 'null심사중', '9등록가능') AS registrationState
			,apsd.create_date createDate
			,return_address address
		FROM apply_product_sales_delivery apsd
				LEFT JOIN product_confirmation_registration pcr ON apsd.apply_product_sales_delivery_id= pcr.apply_product_sales_delivery_id
				LEFT JOIN category_sub sub ON apsd.category_sub_id=sub.category_sub_id
				LEFT JOIN category_middle middle ON middle.category_middle_id = sub.category_middle_id
				LEFT JOIN category_main main ON main.category_main_id = middle.category_main_id
				LEFT JOIN users ON apsd.user_id = users.user_id
		WHERE apsd.apply_product_sales_delivery_id = #{applyId} AND ((pcr.registration_state = 9) OR (ISNULL(pcr.registration_state)))
		GROUP BY apsd.apply_product_sales_delivery_id
	</select>
	
	<update id="updateApplyOne" parameterType="map">
		UPDATE apply_product_sales_delivery
		SET return_address =#{address}
			, delivery_requests = #{request}
		WHERE apply_product_sales_delivery_id = #{applyId};
	</update>
	
	<insert id="insertPCROne" parameterType="map">
		INSERT INTO product_confirmation_registration (
			apply_product_sales_delivery_id
			,registration_state
			,create_date
			)
		VALUES(
			#{applyId}
			,8
			,now()
		)
	</insert>
</mapper>