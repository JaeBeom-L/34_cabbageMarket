<?xml version="1.0" encoding="UTF-8"?>
<!-- 작성자 : 강혜란 210708-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdj.cabbage.mapper.AuctionMapper">
	
	<select id="selectAuctionList" parameterType="map" resultType="map"> 
		SELECT
			apr.apply_product_sales_delivery_id applyId
			,registration_deadline registrationDeadline
			,apr.create_date createDate
			,product_name productName
			,img_name imgName
			,DATEDIFF(apr.registration_deadline, now())-1 datediff
			,apsd.category_sub_id categorySubId
			,cs.category_sub_name categorySubName
			,IF(bap.apply_product_sales_delivery_id IS NULL , apr.min_bid_price , bap.bid_price) price
			,IF(bap.apply_product_sales_delivery_id IS NULL , apr.min_bid_price , bap.bid_price+quote)newPrice
		FROM category_main cm 
		     INNER JOIN category_middle cmd ON cm.category_main_id = cmd.category_main_id
			 INNER JOIN category_sub cs ON cmd.category_middle_id = cs.category_middle_id
		   	 INNER JOIN apply_product_sales_delivery apsd ON cs.category_sub_id = apsd.category_sub_id
			  LEFT JOIN auction_product_registration apr ON apr.apply_product_sales_delivery_id= apsd.apply_product_sales_delivery_id
			  LEFT JOIN apply_product_sales_delivery_img apsdi ON apsd.apply_product_sales_delivery_id= apsdi.apply_product_sales_delivery_id
			  LEFT JOIN bidding_auction_product bap ON apr.apply_product_sales_delivery_id= bap.apply_product_sales_delivery_id
		<where>
			<if test="searchWord != null">
				product_name LIKE CONCAT('%',#{searchWord},'%') AND
			</if>
			<if test="categoryMainId != null">
				cm.category_main_id = #{categoryMainId} AND
			</if>
			( DATEDIFF(apr.registration_deadline, now()) > 1) OR ( DATEDIFF(apr.registration_deadline, now()) = 1)
		</where>
		GROUP BY apsdi.apply_product_sales_delivery_id
		<choose>
		    <when test="sortValue == 1">ORDER BY newPrice DESC, apsdi.img_name</when>
		    <when test="sortValue == 2">ORDER BY newPrice, apsdi.img_name</when>
		    <when test="sortValue == 3">ORDER BY datediff, apsdi.img_name</when>
		    <otherwise>ORDER BY bap.create_date, apsd.create_date, apsdi.img_name</otherwise>
	  	</choose>
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<select id="selectAuctionForCount" parameterType="map" resultType="int"> <!-- 전체 aution 가져오는 매퍼 *검색어 페이징추가 해야함* -->
		SELECT
			count(*)
		FROM 
			category_main cm 
		     INNER JOIN category_middle cmd ON cm.category_main_id = cmd.category_main_id
			 INNER JOIN category_sub cs ON cmd.category_middle_id = cs.category_middle_id
		   	 INNER JOIN apply_product_sales_delivery apsd ON cs.category_sub_id = apsd.category_sub_id
			  LEFT JOIN auction_product_registration apr ON apr.apply_product_sales_delivery_id= apsd.apply_product_sales_delivery_id
		<where>
			<if test="searchWord != null">
				product_name LIKE CONCAT('%',#{searchWord},'%') AND
			</if>
			<if test="categoryMainId != null">
				cm.category_main_id = #{categoryMainId} AND
			</if>
			( DATEDIFF(apr.registration_deadline, now()) > 0) OR ( DATEDIFF(apr.registration_deadline, now()) = 0)
		</where>
	</select>
	
	<select id="selectAuctionOne" parameterType="int" resultType="map"> <!-- applyId로 상세정보 가져오는 매퍼 -->
		SELECT 
			apr.apply_product_sales_delivery_id applyId
			,username userName
			,cs.category_sub_name categorySubName
			,apsd.category_sub_id categorySubId
			,product_name productName
			,IF(bap.apply_product_sales_delivery_id IS NULL , apr.min_bid_price , bap.bid_price) price
			,IF(bap.apply_product_sales_delivery_id IS NULL , apr.min_bid_price, bap.bid_price+quote) newPrice
			,product_desc productDesc
			,min_bid_price minPrice
			,quote
			,registration_state registrationState
			,pcr.create_date createDate
			,apsd.user_id userId
		FROM bidding_auction_product bap
				Right JOIN auction_product_registration apr ON apr.apply_product_sales_delivery_id= bap.apply_product_sales_delivery_id
				LEFT JOIN product_confirmation_registration pcr ON apr.apply_product_sales_delivery_id= pcr.apply_product_sales_delivery_id
				LEFT JOIN apply_product_sales_delivery apsd ON apr.apply_product_sales_delivery_id= apsd.apply_product_sales_delivery_id
				LEFT JOIN manager ON pcr.manager_id = manager.manager_id
				LEFT JOIN users ON apsd.user_id = users.user_id
				LEFT JOIN category_sub cs ON apsd.category_sub_id=cs.category_sub_id
		WHERE apr.apply_product_sales_delivery_id = #{applyId}
		ORDER BY bap.create_date DESC
		LIMIT 1
	</select>
	
	<select id="selectApplyForCount" parameterType="map" resultType="int"> <!-- 전체 apply 가져오는 매퍼 *검색어 페이징추가 해야함* -->
		SELECT
			count(*)
		FROM 
			apply_product_sales_delivery
		WHERE
			user_id = #{userId}
	</select>
	
	<select id="selectApplyList" parameterType="map" resultType="map"> 
		SELECT
			apsd.apply_product_sales_delivery_id applyId
			,apr.create_date createDate
			,CASE WHEN pcr.registration_state = '0' THEN '판매완료'
					WHEN pcr.registration_state = '1' THEN '중고등록완료'
					WHEN pcr.registration_state = '2' THEN '경매등록완료'
					WHEN pcr.registration_state = '9' THEN '미등록'
					WHEN pcr.registration_state IS NULL THEN '배송확인전'
			END AS registrationState
			,CASE WHEN pcr.registration_state = '0' THEN null
					WHEN pcr.registration_state = '1' THEN FORMAT(upr.product_price, N'#,0')
					WHEN pcr.registration_state = '2' THEN IF(bap.apply_product_sales_delivery_id IS NULL , FORMAT(apr.min_bid_price, N'#,0') , FORMAT(bap.bid_price, N'#,0')) 
					WHEN pcr.registration_state = '9' THEN null
					WHEN pcr.registration_state IS NULL THEN null
			END price			
			,CASE WHEN pcr.registration_state = '0' THEN null
					WHEN pcr.registration_state = '1' THEN upr.registration_deadline
					WHEN pcr.registration_state = '2' THEN apr.registration_deadline
					WHEN pcr.registration_state = '9' THEN null
					WHEN pcr.registration_state IS NULL THEN null
			END registrationDeadline
			
			,product_name productName
			,img_name imgName
			
		FROM 
			apply_product_sales_delivery apsd
				LEFT JOIN apply_product_sales_delivery_img apsdi ON apsd.apply_product_sales_delivery_id= apsdi.apply_product_sales_delivery_id
				LEFT JOIN product_confirmation_registration pcr ON apsd.apply_product_sales_delivery_id= pcr.apply_product_sales_delivery_id
				LEFT JOIN auction_product_registration apr ON apsd.apply_product_sales_delivery_id= apr.apply_product_sales_delivery_id
				LEFT JOIN bidding_auction_product bap ON apsd.apply_product_sales_delivery_id = bap.apply_product_sales_delivery_id
				LEFT JOIN used_product_registration upr ON apsd.apply_product_sales_delivery_id= upr.apply_product_sales_delivery_id
		WHERE
			apsd.user_id = #{userId}
		GROUP BY apsd.apply_product_sales_delivery_id
		ORDER BY pcr.create_date, apsd.create_date, apsdi.img_name
	</select>
	
	<select id="selectApplynOne" parameterType="int" resultType="map"> <!-- applyId로 상세정보 가져오는 매퍼 -->
		SELECT 
			apsd.apply_product_sales_delivery_id applyId
			,apsd.create_date dreateDate
			,username userName
			,category_sub_name categorySubName
			,product_name productName
			
		FROM apply_product_sales_delivery apsd
			LEFT JOIN product_confirmation_registration pcr ON apsd.apply_product_sales_delivery_id = pcr.apply_product_sales_delivery_id
			LEFT JOIN users ON apsd.user_id = users.user_id
			LEFT JOIN category_sub sub ON apsd.category_sub_id = sub.category_sub_id
		WHERE apsd.apply_product_sales_delivery_id = #{applyId}
	</select>
	
	<insert id="insertAuction" parameterType="com.gdj.cabbage.vo.AuctionProductRegistration">
		INSERT INTO auction_product_registration (
			apply_product_sales_delivery_id
			,product_desc
			,min_bid_price
			,quote
			,registration_deadline
			,create_date
			)
			VALUES(
			#{applyProductSalesDeliveryId}
			,#{productDesc}
			,#{minBidPrice}
			,#{quote}
			,DATE(#{registrationDeadline})
			,NOW()
			)
	</insert>
	
	<update id="updateConfirmationState" parameterType="int">
		UPDATE 
			product_confirmation_registration
		SET 
			registration_state = ${state}
		WHERE apply_product_sales_delivery_id = ${applyId};
	</update>
	
	<select id="selectBeforeBidCntByMap" parameterType="map" resultType="int">
		SELECT
			count(*) 
		FROM
			bidding_auction_product bap
		WHERE
			apply_product_sales_delivery_id= #{applyId} AND user_id =#{userId}
	</select>
	
	<select id="selectBeforeBidId" parameterType="map" resultType="int">
		SELECT
			bidding_auction_product_id
		FROM
			bidding_auction_product bap
		WHERE
			user_id = #{userId} And apply_product_sales_delivery_id =#{applyId}
	</select>
	<select id="selectUserPoint" parameterType="map" resultType="int">
		SELECT
			utp.point point
		FROM
			users u 
			LEFT JOIN users_total_point utp ON u.user_id=utp.userId 
		WHERE
			u.user_id=#{userId}
	</select>
	<select id="selectBeforeBidPrice" parameterType="map" resultType="int">
		SELECT
			bid_price price
		FROM
			bidding_auction_product
		WHERE
			user_id=#{userId}
		ORDER BY create_date DESC
	</select>
	<insert id="insertBidding" parameterType="map">
		INSERT INTO bidding_auction_product(
			apply_product_sales_delivery_id
			,user_id
			,bid_price
			,create_date
			)
			VALUES(
			#{applyId}
			,#{userId}
			,#{newPrice}
			,now()
			)
	</insert>

	<select id="selectBeforeBid" parameterType="map" resultType="map">
		SELECT
			bidding_auction_product_id bidId
			,apply_product_sales_delivery_id applyId
			,bid_price price
			,user_id userId
		FROM
			bidding_auction_product
		WHERE
			apply_product_sales_delivery_id = #{applyId} and user_id = #{userId}
	</select>
	<insert id="insertBidPointMinusByBid" parameterType="map">
		INSERT INTO bidding_points_using_history(
				bidding_auction_product_id
				,income_expenditure
				,point
				,create_date
				)
			VALUES(
				#{bidId}
				,'입찰'
				,#{price}
				,now()
				)
	</insert>
	<update id="updateBidPointMinusByBid" parameterType="map" >
		UPDATE 
			bidding_points_using_history
			
		SET
			point = #{newPrice}
			,create_date =now()
			
		WHERE
			bidding_auction_product_id = #{bidId}
	</update>
	<update id="updateBidding" parameterType="map" >
		UPDATE 
			bidding_auction_product
		SET
			bid_price = #{newPrice}
			,create_date =now()
			
		WHERE
			bidding_auction_product_id = #{bidId}
	</update>		

	
	
	

	
	

	

	

	

	
	<select id="selectNewBidId" parameterType="map" resultType="int">
		SELECT
			bidding_auction_product_id
		FROM
			bidding_auction_product
		WHERE
			apply_product_sales_delivery_id = #{applyId} AND user_id = #{userId}
		ORDER BY create_date DESC
		LIMIT 1
	</select>
	

	
	<select id="getTimeOutApplyId" resultType="map">
		SELECT
			apply_product_sales_delivery_id	applyId
		FROM auction_product_registration
		WHERE DATEDIFF(registration_deadline, NOW()) = 0
	</select>
	
	<select id="selectBeforeBidCntByApplyId" parameterType="int" resultType="int">
		SELECT
			count(*)
		FROM
			bidding_auction_product bap
		WHERE
			apply_product_sales_delivery_id =#{applyId}
	</select>
	
	<select id="selectLastBidInfo" parameterType="int" resultType="map">
		SELECT
			bidding_auction_product_id bidId
			,apply_product_sales_delivery_id applyId
			,bid_price point
		FROM
			bidding_auction_product bap
		WHERE
			apply_product_sales_delivery_id = #{applyId}
		ORDER BY create_date DESC
		limit 1
	</select>
	
	<select id="selectNotLastBidInfo" parameterType="map" resultType="map">
		SELECT
			bidding_auction_product_id bidId
			,apply_product_sales_delivery_id applyId
			,bid_price point
		FROM
			bidding_auction_product bap
		WHERE
			apply_product_sales_delivery_id = #{applyId} AND bidding_auction_product_id != ${bidId}
		ORDER BY create_date DESC
	</select>
	
	<insert id="insertBidPointPlusHistory" parameterType="map">
		INSERT INTO bidding_points_using_history(
			bidding_auction_product_id
			,income_expenditure
			,point
			,create_date
			)
		VALUES(
			#{bidId}
			,'유찰'
			,#{point}
			,date(now())
			)
	</insert>
	
	<insert id="insertBidCommisionByLastBid" parameterType="map">
		INSERT INTO bidding_commissions_history(
			apply_product_sales_delivery_id
			,commission_info_id
			,commission_point
			,create_date
			)
		VALUES(
			#{applyId}
			,2
			,#{commission}
			,date(now())
			)
	</insert>
	
	<select id="selectBidComissionRateForint" resultType="double">
		SELECT
			commission_rate/100
		FROM
			commission_info ci
		WHERE
			ci.commission_info_id = #{int}
	</select>
	
	<insert id="insertBidPointPlusByLastBid" parameterType="map">
		INSERT INTO bidding_points_using_history(
			bidding_auction_product_id
			,income_expenditure
			,point
			,create_date
			)
		VALUES(
			#{bidId}
			,'낙찰'
			,#{point}
			,now()
			)
	</insert>
	
	<select id="selectAuctionListBySubId" parameterType="int" resultType="map"> 
		SELECT
			apr.apply_product_sales_delivery_id applyId
			,product_name productName
			,img_name imgName
			,IF(bap.apply_product_sales_delivery_id IS NULL , apr.min_bid_price , bap.bid_price+quote) newPrice
		FROM category_main cm 
		     INNER JOIN category_middle cmd ON cm.category_main_id = cmd.category_main_id
			 INNER JOIN category_sub cs ON cmd.category_middle_id = cs.category_middle_id
		   	 INNER JOIN apply_product_sales_delivery apsd ON cs.category_sub_id = apsd.category_sub_id
			  LEFT JOIN auction_product_registration apr ON apr.apply_product_sales_delivery_id= apsd.apply_product_sales_delivery_id
			  LEFT JOIN apply_product_sales_delivery_img apsdi ON apsd.apply_product_sales_delivery_id= apsdi.apply_product_sales_delivery_id
			  LEFT JOIN bidding_auction_product bap ON apr.apply_product_sales_delivery_id= bap.apply_product_sales_delivery_id
		<where>
			(apsd.category_sub_id = ${subId})
			AND
			( DATEDIFF(apr.registration_deadline, now()) > 1) OR ( DATEDIFF(apr.registration_deadline, now()) = 1)
		</where>
		GROUP BY apsdi.apply_product_sales_delivery_id
		ORDER BY bap.create_date, apsd.create_date, apsdi.img_name
	</select>
	
	<select id="selectAuctionListByDeadline" parameterType="int" resultType="map"> 
		SELECT
			apr.apply_product_sales_delivery_id applyId
			,product_name productName
			,img_name imgName
			,DATEDIFF(apr.registration_deadline, now())-1 datediff
			,IF(bap.apply_product_sales_delivery_id IS NULL , apr.min_bid_price , bap.bid_price+quote)newPrice
		FROM apply_product_sales_delivery apsd
			  LEFT JOIN auction_product_registration apr ON apr.apply_product_sales_delivery_id= apsd.apply_product_sales_delivery_id
			  LEFT JOIN apply_product_sales_delivery_img apsdi ON apsd.apply_product_sales_delivery_id= apsdi.apply_product_sales_delivery_id
			  LEFT JOIN bidding_auction_product bap ON apr.apply_product_sales_delivery_id= bap.apply_product_sales_delivery_id
		WHERE
			( DATEDIFF(apr.registration_deadline, now()) > 1) OR ( DATEDIFF(apr.registration_deadline, now()) = 1)

		GROUP BY apsdi.apply_product_sales_delivery_id
		ORDER BY apr.registration_deadline ASC
		LIMIT #{limit}
	</select>
	
</mapper>